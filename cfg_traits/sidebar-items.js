initSidebarItems({"macro":[["impl_mock_accountant","Exposes a struct $name that implements the `trait Accountant`. The struct expects one generic parameter that implements the fungibles traits `Inspect`, `Mutate` and `Transfer`. Furthermore, there exists a struct `GenesisConfig` that implements `trait GenesisBuild` that can be used like any other `GenesisConfig` to initialize state in the `TestExternalities`."],["impl_mock_fees_state",""],["impl_mock_registry",""]],"mod":[["fees",""],["mocks","Mocks of traits for usage in pallet-tests. Also does contain implementations for Substrate based traits for testing"],["ops",""]],"struct":[["Always",""],["CurrencyPair","A trait that can be used to retrieve the current price for a currency"],["Never",""],["PriceValue",""]],"trait":[["CurrencyPrice",""],["InterestAccrual","A trait that can be used to calculate interest accrual for debt"],["Investment","A trait, when implemented allows to invest into investment classes"],["InvestmentAccountant","A trait whoâ€™s implementer provides means of accounting for investments of a generic kind."],["InvestmentProperties","A trait that allows to retrieve information about an investment class."],["OrderManager","A trait, when implemented must take care of collecting orders (invest & redeem) for a given investment class. When being asked it must return the current orders and when being singled about a fulfillment, it must act accordingly."],["Permissions",""],["PoolInspect","A trait that support pool inspection operations such as pool existence checks and pool admin of permission set."],["PoolNAV","A trait that can be used to fetch the nav and update nav for a given pool"],["PoolReserve","A trait that support pool reserve operations such as withdraw and deposit"],["PoolUpdateGuard",""],["PreConditions",""],["Properties",""],["Reward","A trait used for loosely coupling the claim pallet with a reward mechanism."],["TrancheToken","Trait for converting a pool+tranche ID pair to a CurrencyId"]]});