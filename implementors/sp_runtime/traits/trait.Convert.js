(function() {var implementors = {};
implementors["altair_runtime"] = [{"text":"impl Convert&lt;<a class=\"enum\" href=\"altair_runtime/enum.CurrencyId.html\" title=\"enum altair_runtime::CurrencyId\">CurrencyId</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MultiLocation&gt;&gt; for <a class=\"struct\" href=\"altair_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct altair_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["altair_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;MultiAsset, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"altair_runtime/enum.CurrencyId.html\" title=\"enum altair_runtime::CurrencyId\">CurrencyId</a>&gt;&gt; for <a class=\"struct\" href=\"altair_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct altair_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["altair_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;&lt;&lt;MultiSignature as Verify&gt;::Signer as IdentifyAccount&gt;::AccountId, MultiLocation&gt; for <a class=\"struct\" href=\"altair_runtime/xcm/struct.AccountIdToMultiLocation.html\" title=\"struct altair_runtime::xcm::AccountIdToMultiLocation\">AccountIdToMultiLocation</a>","synthetic":false,"types":["altair_runtime::xcm::AccountIdToMultiLocation"]}];
implementors["centrifuge_runtime"] = [{"text":"impl Convert&lt;<a class=\"enum\" href=\"centrifuge_runtime/xcm/enum.CurrencyId.html\" title=\"enum centrifuge_runtime::xcm::CurrencyId\">CurrencyId</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MultiLocation&gt;&gt; for <a class=\"struct\" href=\"centrifuge_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct centrifuge_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["centrifuge_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;MultiAsset, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"centrifuge_runtime/xcm/enum.CurrencyId.html\" title=\"enum centrifuge_runtime::xcm::CurrencyId\">CurrencyId</a>&gt;&gt; for <a class=\"struct\" href=\"centrifuge_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct centrifuge_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["centrifuge_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;&lt;&lt;MultiSignature as Verify&gt;::Signer as IdentifyAccount&gt;::AccountId, MultiLocation&gt; for <a class=\"struct\" href=\"centrifuge_runtime/xcm/struct.AccountIdToMultiLocation.html\" title=\"struct centrifuge_runtime::xcm::AccountIdToMultiLocation\">AccountIdToMultiLocation</a>","synthetic":false,"types":["centrifuge_runtime::xcm::AccountIdToMultiLocation"]}];
implementors["cfg_primitives"] = [{"text":"impl Convert&lt;<a class=\"struct\" href=\"cfg_primitives/types/struct.TrancheWeight.html\" title=\"struct cfg_primitives::types::TrancheWeight\">TrancheWeight</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"cfg_primitives/types/struct.TrancheWeight.html\" title=\"struct cfg_primitives::types::TrancheWeight\">TrancheWeight</a>","synthetic":false,"types":["cfg_primitives::types::TrancheWeight"]}];
implementors["development_runtime"] = [{"text":"impl Convert&lt;<a class=\"enum\" href=\"development_runtime/enum.CurrencyId.html\" title=\"enum development_runtime::CurrencyId\">CurrencyId</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;MultiLocation&gt;&gt; for <a class=\"struct\" href=\"development_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct development_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["development_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;MultiAsset, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"development_runtime/enum.CurrencyId.html\" title=\"enum development_runtime::CurrencyId\">CurrencyId</a>&gt;&gt; for <a class=\"struct\" href=\"development_runtime/xcm/struct.CurrencyIdConvert.html\" title=\"struct development_runtime::xcm::CurrencyIdConvert\">CurrencyIdConvert</a>","synthetic":false,"types":["development_runtime::xcm::CurrencyIdConvert"]},{"text":"impl Convert&lt;&lt;&lt;MultiSignature as Verify&gt;::Signer as IdentifyAccount&gt;::AccountId, MultiLocation&gt; for <a class=\"struct\" href=\"development_runtime/xcm/struct.AccountIdToMultiLocation.html\" title=\"struct development_runtime::xcm::AccountIdToMultiLocation\">AccountIdToMultiLocation</a>","synthetic":false,"types":["development_runtime::xcm::AccountIdToMultiLocation"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()